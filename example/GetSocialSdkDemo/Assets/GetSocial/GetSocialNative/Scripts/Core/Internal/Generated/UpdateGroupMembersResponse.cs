#if UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX || UNITY_EDITOR
/**
 * Autogenerated by Thrift Compiler ()
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace GetSocialSdk.Core 
{

  /// <summary>
  /// #sdk7
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class UpdateGroupMembersResponse : TBase
  {
    private List<SGGroupMember> _members;

    public List<SGGroupMember> Members
    {
      get
      {
        return _members;
      }
      set
      {
        __isset.members = true;
        this._members = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool members;
    }

    public UpdateGroupMembersResponse() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.List) {
                {
                  Members = new List<SGGroupMember>();
                  TList _list87 = iprot.ReadListBegin();
                  for( int _i88 = 0; _i88 < _list87.Count; ++_i88)
                  {
                    SGGroupMember _elem89;
                    _elem89 = new SGGroupMember();
                    _elem89.Read(iprot);
                    Members.Add(_elem89);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("UpdateGroupMembersResponse");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Members != null && __isset.members) {
          field.Name = "members";
          field.Type = TType.List;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, Members.Count));
            foreach (SGGroupMember _iter90 in Members)
            {
              _iter90.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("UpdateGroupMembersResponse(");
      bool __first = true;
      if (Members != null && __isset.members) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Members: ");
        __sb.Append(Members.ToDebugString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
#endif
