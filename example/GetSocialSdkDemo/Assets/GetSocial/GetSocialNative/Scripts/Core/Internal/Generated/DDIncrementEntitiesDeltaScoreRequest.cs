#if UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX || UNITY_EDITOR
/**
 * Autogenerated by Thrift Compiler ()
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace GetSocialSdk.Core 
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class DDIncrementEntitiesDeltaScoreRequest : TBase
  {
    private THashSet<DDEntityDeltaScore> _entities;

    public THashSet<DDEntityDeltaScore> Entities
    {
      get
      {
        return _entities;
      }
      set
      {
        __isset.entities = true;
        this._entities = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool entities;
    }

    public DDIncrementEntitiesDeltaScoreRequest() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Set) {
                {
                  Entities = new THashSet<DDEntityDeltaScore>();
                  TSet _set364 = iprot.ReadSetBegin();
                  for( int _i365 = 0; _i365 < _set364.Count; ++_i365)
                  {
                    DDEntityDeltaScore _elem366;
                    _elem366 = new DDEntityDeltaScore();
                    _elem366.Read(iprot);
                    Entities.Add(_elem366);
                  }
                  iprot.ReadSetEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("DDIncrementEntitiesDeltaScoreRequest");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Entities != null && __isset.entities) {
          field.Name = "entities";
          field.Type = TType.Set;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteSetBegin(new TSet(TType.Struct, Entities.Count));
            foreach (DDEntityDeltaScore _iter367 in Entities)
            {
              _iter367.Write(oprot);
            }
            oprot.WriteSetEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("DDIncrementEntitiesDeltaScoreRequest(");
      bool __first = true;
      if (Entities != null && __isset.entities) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Entities: ");
        __sb.Append(Entities);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
#endif
