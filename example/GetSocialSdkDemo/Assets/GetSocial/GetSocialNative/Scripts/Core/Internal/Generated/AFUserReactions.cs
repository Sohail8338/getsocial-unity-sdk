#if UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX || UNITY_EDITOR
/**
 * Autogenerated by Thrift Compiler ()
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace GetSocialSdk.Core 
{

  /// <summary>
  /// #sdk7
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class AFUserReactions : TBase
  {
    private int _commentCount;
    private List<THPublicUser> _knownCommenters;
    private Dictionary<string, int> _reactionCount;
    private List<AFReaction> _knownReactors;
    private List<string> _myReactions;
    private int _viewCount;
    private bool _isViewedByMe;
    private int _bookmarkCount;
    private bool _isBookmarkedByMe;
    private int _shareCount;
    private bool _isSharedByMe;

    public int CommentCount
    {
      get
      {
        return _commentCount;
      }
      set
      {
        __isset.commentCount = true;
        this._commentCount = value;
      }
    }

    public List<THPublicUser> KnownCommenters
    {
      get
      {
        return _knownCommenters;
      }
      set
      {
        __isset.knownCommenters = true;
        this._knownCommenters = value;
      }
    }

    /// <summary>
    /// at most 3 items
    /// </summary>
    public Dictionary<string, int> ReactionCount
    {
      get
      {
        return _reactionCount;
      }
      set
      {
        __isset.reactionCount = true;
        this._reactionCount = value;
      }
    }

    public List<AFReaction> KnownReactors
    {
      get
      {
        return _knownReactors;
      }
      set
      {
        __isset.knownReactors = true;
        this._knownReactors = value;
      }
    }

    /// <summary>
    /// at most 3 items
    /// </summary>
    public List<string> MyReactions
    {
      get
      {
        return _myReactions;
      }
      set
      {
        __isset.myReactions = true;
        this._myReactions = value;
      }
    }

    public int ViewCount
    {
      get
      {
        return _viewCount;
      }
      set
      {
        __isset.viewCount = true;
        this._viewCount = value;
      }
    }

    public bool IsViewedByMe
    {
      get
      {
        return _isViewedByMe;
      }
      set
      {
        __isset.isViewedByMe = true;
        this._isViewedByMe = value;
      }
    }

    public int BookmarkCount
    {
      get
      {
        return _bookmarkCount;
      }
      set
      {
        __isset.bookmarkCount = true;
        this._bookmarkCount = value;
      }
    }

    public bool IsBookmarkedByMe
    {
      get
      {
        return _isBookmarkedByMe;
      }
      set
      {
        __isset.isBookmarkedByMe = true;
        this._isBookmarkedByMe = value;
      }
    }

    public int ShareCount
    {
      get
      {
        return _shareCount;
      }
      set
      {
        __isset.shareCount = true;
        this._shareCount = value;
      }
    }

    public bool IsSharedByMe
    {
      get
      {
        return _isSharedByMe;
      }
      set
      {
        __isset.isSharedByMe = true;
        this._isSharedByMe = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool commentCount;
      public bool knownCommenters;
      public bool reactionCount;
      public bool knownReactors;
      public bool myReactions;
      public bool viewCount;
      public bool isViewedByMe;
      public bool bookmarkCount;
      public bool isBookmarkedByMe;
      public bool shareCount;
      public bool isSharedByMe;
    }

    public AFUserReactions() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.I32) {
                CommentCount = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.List) {
                {
                  KnownCommenters = new List<THPublicUser>();
                  TList _list29 = iprot.ReadListBegin();
                  for( int _i30 = 0; _i30 < _list29.Count; ++_i30)
                  {
                    THPublicUser _elem31;
                    _elem31 = new THPublicUser();
                    _elem31.Read(iprot);
                    KnownCommenters.Add(_elem31);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.Map) {
                {
                  ReactionCount = new Dictionary<string, int>();
                  TMap _map32 = iprot.ReadMapBegin();
                  for( int _i33 = 0; _i33 < _map32.Count; ++_i33)
                  {
                    string _key34;
                    int _val35;
                    _key34 = iprot.ReadString();
                    _val35 = iprot.ReadI32();
                    ReactionCount[_key34] = _val35;
                  }
                  iprot.ReadMapEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.List) {
                {
                  KnownReactors = new List<AFReaction>();
                  TList _list36 = iprot.ReadListBegin();
                  for( int _i37 = 0; _i37 < _list36.Count; ++_i37)
                  {
                    AFReaction _elem38;
                    _elem38 = new AFReaction();
                    _elem38.Read(iprot);
                    KnownReactors.Add(_elem38);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.List) {
                {
                  MyReactions = new List<string>();
                  TList _list39 = iprot.ReadListBegin();
                  for( int _i40 = 0; _i40 < _list39.Count; ++_i40)
                  {
                    string _elem41;
                    _elem41 = iprot.ReadString();
                    MyReactions.Add(_elem41);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.I32) {
                ViewCount = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.Bool) {
                IsViewedByMe = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.I32) {
                BookmarkCount = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.Bool) {
                IsBookmarkedByMe = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 10:
              if (field.Type == TType.I32) {
                ShareCount = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 11:
              if (field.Type == TType.Bool) {
                IsSharedByMe = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("AFUserReactions");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.commentCount) {
          field.Name = "commentCount";
          field.Type = TType.I32;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(CommentCount);
          oprot.WriteFieldEnd();
        }
        if (KnownCommenters != null && __isset.knownCommenters) {
          field.Name = "knownCommenters";
          field.Type = TType.List;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, KnownCommenters.Count));
            foreach (THPublicUser _iter42 in KnownCommenters)
            {
              _iter42.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (ReactionCount != null && __isset.reactionCount) {
          field.Name = "reactionCount";
          field.Type = TType.Map;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteMapBegin(new TMap(TType.String, TType.I32, ReactionCount.Count));
            foreach (string _iter43 in ReactionCount.Keys)
            {
              oprot.WriteString(_iter43);
              oprot.WriteI32(ReactionCount[_iter43]);
            }
            oprot.WriteMapEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (KnownReactors != null && __isset.knownReactors) {
          field.Name = "knownReactors";
          field.Type = TType.List;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, KnownReactors.Count));
            foreach (AFReaction _iter44 in KnownReactors)
            {
              _iter44.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (MyReactions != null && __isset.myReactions) {
          field.Name = "myReactions";
          field.Type = TType.List;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, MyReactions.Count));
            foreach (string _iter45 in MyReactions)
            {
              oprot.WriteString(_iter45);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (__isset.viewCount) {
          field.Name = "viewCount";
          field.Type = TType.I32;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(ViewCount);
          oprot.WriteFieldEnd();
        }
        if (__isset.isViewedByMe) {
          field.Name = "isViewedByMe";
          field.Type = TType.Bool;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(IsViewedByMe);
          oprot.WriteFieldEnd();
        }
        if (__isset.bookmarkCount) {
          field.Name = "bookmarkCount";
          field.Type = TType.I32;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(BookmarkCount);
          oprot.WriteFieldEnd();
        }
        if (__isset.isBookmarkedByMe) {
          field.Name = "isBookmarkedByMe";
          field.Type = TType.Bool;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(IsBookmarkedByMe);
          oprot.WriteFieldEnd();
        }
        if (__isset.shareCount) {
          field.Name = "shareCount";
          field.Type = TType.I32;
          field.ID = 10;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(ShareCount);
          oprot.WriteFieldEnd();
        }
        if (__isset.isSharedByMe) {
          field.Name = "isSharedByMe";
          field.Type = TType.Bool;
          field.ID = 11;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(IsSharedByMe);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("AFUserReactions(");
      bool __first = true;
      if (__isset.commentCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CommentCount: ");
        __sb.Append(CommentCount);
      }
      if (KnownCommenters != null && __isset.knownCommenters) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("KnownCommenters: ");
        __sb.Append(KnownCommenters.ToDebugString());
      }
      if (ReactionCount != null && __isset.reactionCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ReactionCount: ");
        __sb.Append(ReactionCount.ToDebugString());
      }
      if (KnownReactors != null && __isset.knownReactors) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("KnownReactors: ");
        __sb.Append(KnownReactors.ToDebugString());
      }
      if (MyReactions != null && __isset.myReactions) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MyReactions: ");
        __sb.Append(MyReactions.ToDebugString());
      }
      if (__isset.viewCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ViewCount: ");
        __sb.Append(ViewCount);
      }
      if (__isset.isViewedByMe) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IsViewedByMe: ");
        __sb.Append(IsViewedByMe);
      }
      if (__isset.bookmarkCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BookmarkCount: ");
        __sb.Append(BookmarkCount);
      }
      if (__isset.isBookmarkedByMe) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IsBookmarkedByMe: ");
        __sb.Append(IsBookmarkedByMe);
      }
      if (__isset.shareCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ShareCount: ");
        __sb.Append(ShareCount);
      }
      if (__isset.isSharedByMe) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IsSharedByMe: ");
        __sb.Append(IsSharedByMe);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
#endif
